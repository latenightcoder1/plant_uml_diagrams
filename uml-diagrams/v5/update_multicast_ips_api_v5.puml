@startuml

title Update Multicast IP Addresses API Flow

actor "User" as user
box "client service"
participant "MulticastIpConfigurationController" as mcc
participant "MulticastIpConfigService" as mcs
participant "MulticastIpConfigRequestValidator" as mcv
participant "MultiCastIpConfig\nRepository" as mcr
participant "ClientConfig\nVersionRepository" as cvr
participant "MulticastIp\nConfigMapper" as mc
participant "ExceptionHandler" as eh
end box
participant "Shadow \nDevice" as sd
database "RDS \nmulti_cast\n_ip_config" as table
database "RDS \nclient_configurations\n_versions" as table2

group Update multicast ip from cleo
	user -> mcc ++: PUT /api/v1/client-multicast-ips/tenant/{tenantId}
	note left: {"data":[{\n "id":"xxxx",\n "ipAddress":"224.0.0.1",\n "macAddress":"01:00:5E:7F:FF:FA",\n "tenantId":"abc-xyz-t65",\n "status":"Denied",\n "sourceOfAction": "User",\n "siteId": "123",\n "buildingId": "123",\n "floorId": "123",\n "zoneId": "123",\n "deviceId": "134",\n "headendSerialNumber": "123",\n "clientType": "wireless",\n "l4Port": "80",\n "protocol": "TCP"\n},\n{\n "id":"xxxx",\n "ipAddress":"224.0.0.2",\n "macAddress":"01:00:5E:7F:FF:FA",\n "tenantId":"abc-xyz-t65",\n "status":"Denied",\n "sourceOfAction": "User",\n "siteId": "123",\n "buildingId": "123",\n "floorId": "123",\n "zoneId": "123",\n "deviceId": "134",\n "headendSerialNumber": "123",\n "clientType": "wireless",\n "l4Port": "81",\n "protocol": "TCP"\n}]}
	alt #LightBlue no exception
	    mcc -> mcv ++: validateUpdateMulticastIpPayload(tenantId, multicastIpConfigDTOs)-\n validate tenantId, ipAddress, status, l4Port and protocol and sourceOfAction
	    mcv -> mcc --: void
	    mcc -> mcs ++: updateMulticastIps(multicastIpConfigDTOs)
	    loop #White multicastIpConfigDTOs.size() times
        mcs -> mcm ++: getUniqueRowIdentifier(tenantId, ipAddress, l4Port, protocol)
      	mcm -> mcs --: requestedEntriesPKey
      end
	    mcs -> mcr ++ : findAllById(requestedEntriesPKeys)
	    mcr --> table ++: query
	    table --> mcr --: result
	    mcr -> mcs -- : List<MultiCastIpConfigEntity>
      mcs -> mcs : rom List<MultiCastIpConfigEntity>\nto Map<PKey, MultiCastIpConfigEntity>
      loop #White multicastIpConfigDTOs.size() times
        mcs -> mcm ++: mapMulticastIpConfigDTOToMulticastConfigEntity(multicastIpConfigDTO)
        mcm -> mcs --: MultiCastIpConfigEntity
        alt isANewIpAddress
          alt status== Denied
            mcs-> mcs : shouldMulticastIpConfigVersionChange = true
          end
        else
          mcs -> mcs : copy createdTime from existing entry\nset shouldMulticastIpConfigVersionChange = true\n if applicable
        end
      end
    alt #White withinOneTransaction\nupdateDbAndNetworkResources(multicastIpConfigEntities,shouldMulticastIpConfigVersionChange)
      mcs -> mcr ++:saveAll(toBeAddedMulticastIps)
      mcr --> table ++: add
      table --> mcr --: added entries
      mcr -> mcs : List<MultiCastIpConfigEntity>
      alt shouldMulticastIpConfigVersionChange
        mcs -> cvr ++: findByTenantId(tenantId)
        cvr --> table2 ++: query
        table2 --> cvr --: result
        cvr -> mcs --: Optional<ClientConfigVersion>
        mcs -> sd ++: shadowRepository.listVersions(filterQuery)
        note left: {\n"tenantId":tenantId,\n"name":"multicast_ip_deny_list"\n}
        sd -> mcs --: ElementStateResponse
        mcs -> mcs : getLatestVersion\n ElementStateVersionDTO
        mcs -> mcs : getIncremented version
        mcs -> sd ++: updateNewVersion
        sd -> mcs --:
        mcs -> cvr ++: updateNewVersion
        cvr --> table2 ++: update
        table2 --> cvr --: updated entry
        cvr -> mcs --:
      end
    end
    loop #White multicastIpConfigEntities.size() times
      mcs -> mcm ++: mapMulticastIpConfigEntityToMulticastIpConfigDTO(multicastIpConfigEntity)
      mcm -> mcs --: MulticastIpConfigDTO
    end
    mcs -> mcc --: MultiCastIpsResponse(data)
	else #Orange exception
    mcs --> eh ++: handleException
    eh -> mcc --: MultiCastIpsResponse(error)
  end
  mcc -> user --: ResponseEntity
	note left: {\n"data":{\n"items":\n[{\n "id":"xxxx", \n "ipAddress":"224.0.0.1",\n "macAddress":"01:00:5E:7F:FF:FA",\n "tenantId":"abc-xyz-t65",\n "status":"Denied",\n "sourceOfAction": "User",\n "siteId": "123",\n "buildingId": "123",\n "floorId": "123",\n "zoneId": "123",\n "deviceId": "134",\n "headendSerialNumber": "123",\n "clientType": "wireless",\n "createdTimeMillis": 1684856763411,\n "updatedTimeMillis": 1684856763411,\n "serviceName": "serviceName",\n "l4Port": "80",\n "protocol": "TCP"\n},\n{\n "id":"xxxx", \n "ipAddress":"224.0.0.2",\n "macAddress":"01:00:5E:7F:FF:FA",\n "tenantId":"abc-xyz-t65",\n "status":"Denied",\n "sourceOfAction": "User",\n "siteId": "123",\n "buildingId": "123",\n "floorId": "123",\n "zoneId": "123",\n "deviceId": "134",\n "headendSerialNumber": "123",\n "clientType": "wireless",\n "createdTimeMillis": 1684856763411,\n "updatedTimeMillis": 1684856763411,\n "serviceName": "serviceName",\n "l4Port": "81",\n "protocol": "TCP"\n}],\n"count": 2,\n"offset": 0,\n "limit": 2\n},\n"error": {\n "statusCode": 500,\n "status": "INTERNAL_SERVER_ERROR",\n "message": "error message"\n }\n}
end

@enduml