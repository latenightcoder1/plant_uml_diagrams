@startuml

title Add Multi Cast IP Addresses RPC Flow

participant "Headend" as headend
box "client service"
participant "MulticastIpRpc\nServiceImpl" as mrsi
participant "MultiCastIpConfig\nRepository" as mcr
participant "MulticastIp\nConfigMapper" as mcm
participant "SiteManager\nRepository" as smr
participant "MulticastIpConfigService" as mcs
participant "ClientConfig\nVersionRepository" as cvr
end box
participant "Shadow \nDevice" as sd
database "RDS \nmulti_cast_ip_config" as table

group Self Learned Flow
	headend -> mrsi ++: rpc AddMulticastIp(AddMulticastIpRequest)
	note left: message AddMulticastIpRequest {\nrepeated MulticastIpRequest multicast_ip_request = 1;\n}\n\nmessage MulticastIpRequest {\nstring ip_address = 1;\nstring mac_address = 2;\nstring source_of_action = 3;\nstring client_type = 4;\nstring status = 5;\nstring l4_port = 6;\nstring protocol = 7;\n}
  alt #LightBlue no exception
    mrsi -> mrsi : validate mandatory fields from payload-\n1)ip_address, l4_port and protocol shouldn't be null\n2)validate accepted status and source_of_action
    mrsi -> sd ++: shadowRepository.getDeviceDTO(certId)
	  sd -> mrsi --: DeviceDTO
	  mrsi -> mcr ++: findAll(tenantId)
	  mcr --> table ++: query
	  table --> mcr --: result
	  mcr -> mrsi --: List<MultiCastIpConfigEntity>
	  mrsi -> mrsi : from List<MultiCastIpConfigEntity>\nto Map<PKey, MultiCastIpConfigEntity>
	  mrsi -> smr ++: getLocationFromDeviceId(deviceDTO.getId())
	  smr -> mrsi --: DeviceLocation
	    loop #White AddMulticastIpRequest.multicast_ip_requestList().size() times
        mrsi -> mcm ++: mapMulticastIpRequestToMulticastConfigEntity\n(multicastIpRequest, deviceLocation, deviceDTO)
        mcm -> mrsi --: MultiCastIpConfigEntity
        alt isOneOfTheExistingEntry
          mrsi -> mrsi : copy following\n from existing entry\n1)status\n2)sourceOfAction\n3)createdTime
        end
        alt isANewEntry &&\n status== Denied
          mrsi-> mrsi : shouldMulticastIpConfigVersionChange = true
        end
      end
      alt #White withinOneTransaction
      mrsi -> mcr ++:saveAll(toBeAddedMulticastIps)
      mcr --> table ++: add
      table --> mcr --: added entries
      mcr -> mrsi : List<MultiCastIpConfigEntity>
      mrsi -> mcs ++: processMulticastIpDenyListVersionChange(shouldMulticastIpConfigVersionChange, tenantId)
      alt shouldMulticastIpConfigVersionChange
      mcs -> cvr ++: findByTenantId(tenantId)
      cvr --> table ++: query
      table --> cvr --: result
      cvr -> mcs --: Optional<ClientConfigVersion>
      mcs -> sd ++: shadowRepository.listVersions(filterQuery)
      note left: {\n"tenantId":tenantId,\n"name":"multicast_ip_deny_list"\n}
      sd -> mcs --: ElementStateResponse
      mcs -> mcs : getLatestVersion\n ElementStateVersionDTO
      mcs -> mcs : getIncremented version
      mcs -> sd ++: updateNewVersion
      sd -> mcs --:
      mcs -> cvr ++: updateNewVersion
      cvr --> table ++: update
      table --> cvr --: updated entry
      cvr -> mcs --:
      end
      mcs -> mrsi --: void
      end
    loop #White multicastIpConfigEntities.size() times
    	    mrsi -> mcm ++: mapMulticastIpConfigEntity\nToMulticastIpResponse(multicastIpConfigEntity)
    	    mcm -> mrsi --: MulticastIpResponse
    end
  else #Orange exception
        mrsi -> mrsi : map exception to \nerror
  end
	mrsi -> headend --: message MultiCastIpsResponse
	note left: message MultiCastIpsResponse {\nrepeated MultiCastIpResponse multicast_ip_response = 1;\nError error =2;\n}\n\nmessage MultiCastIpResponse {\nstring ip_address = 1;\nstring mac_address = 2;\nstring source_of_action = 3;\nstring client_type = 4;\nstring status = 5;\nstring service_name = 6;\nstring l4_port = 7;\n}\n\nmessage Error {\nstring message = 1;\nstring status = 2;\nint status_code = 3;\n}
end

@enduml